{
  "MockStar Config File Init": {
    "prefix": ["m-mockstar-config-init"],
    "body": [
      "const path = require('path');",
      "",
      "// 更多配置说明，请参考 https://mockstarjs.github.io/mockstar/api/mockstar-config.html",
      "module.exports = {",
      "  // mockstar-app 项目根目录",
      "  rootPath: __dirname,",
      "",
      "  // mock server 桩数据模块目录",
      "  mockServerPath: path.resolve(__dirname, './mock_server'),",
      "",
      "  // mockstar 启动之后的服务端口号",
      "  port: 9527,",
      "",
      "  // 构建之后的目录，也是运行产物临时目录",
      "  // buildPath: path.resolve(__dirname, './build'),",
      "",
      "  // 日志输出目录",
      "  // logPath: path.resolve(__dirname, './build/logs'),",
      "",
      "  // 应用的名字，用于标识一个服务，格式为 mockstar_${this.port}",
      "  // name: mockstar_9527,",
      "",
      "  // 命名空间",
      "  // namespace: '',",
      "",
      "  // 静态资源的基础路径，例如 /s/ ，或者 /s/t/",
      "  // staticBasePath: '/',",
      "",
      "  // 是否监听文件变化，推荐本地开发模式下使用",
      "  // watch: false,",
      "",
      "  // 是否为开发模式",
      "  // isDev: false,",
      "};",
      ""
    ],
    "description": "mockstar.config.js 模板"
  },
  "MockStar Mock Module Init": {
    "prefix": ["m-mockstar-mock-module-init"],
    "body": [
      "const { getSuccessData } = require('../../base');",
      "",
      "/**",
      " * 学生类型",
      " *",
      " * @param {Object} params 请求参数的对象，例如 ?a=1&b=2 ，则 params={a:1,b:2}",
      " * @param {Object} req 详见 http://expressjs.com/en/4x/api.html#req",
      " * @return {Promise|*}",
      " */",
      "module.exports = function (params, req) {",
      "  return getSuccessData({",
      "    uid: params.uid || 11111,",
      "    type: 1,",
      "    description: '我是学生',",
      "    other_msg: '【更灵活】支持符合 CommonJS 规范的 node 模块',",
      "  });",
      "};",
      ""
    ],
    "description": "mock module 初始化"
  }
}
